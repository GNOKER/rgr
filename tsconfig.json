{
  "compilerOptions": {
    /* Basic Options */
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */
    "lib": ["es2016", "dom"],
    
    /* Advanced Options */
    "rootDir": "./src",                                  /* Specify the root folder within your source files. */
    "outDir": "./dist",                                  /* Specify an output folder for all emitted files. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "removeComments": true,                              /* Disable emitting comments. */
    "typeRoots": ["node_modules/@types"],                /* Specify multiple folders that act like './node_modules/@types'. */
    "allowSyntheticDefaultImports": true,               /* Allow 'import x from y' when a module doesn't have a default export. */

    /* Decorators */
    "experimentalDecorators": true,                      /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,                       /* Emit design-type metadata for decorated declarations in source files. */

    /* Strictness Enhancements */
    "strictNullChecks": true,                            /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,                         /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitThis": true,                              /* Enable error reporting when 'this' is given the type 'any'. */
    "noUnusedLocals": true,                              /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read. */
    "strictBindCallApply": true,                         /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    
    /* Module Resolution */
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./",                                     /* Specify the base directory to resolve non-relative module names. */
    "paths": {                                           /* Re-map imports to additional lookup locations. */
      "@/*": ["src/*"]
    }
  },
  "include": ["**/*"],                               /* Specify an array of filenames or patterns to include in the program. */
  "exclude": ["node_modules", "dist", "**/*.spec.ts"] /* Specify an array of filenames or patterns to exclude. */
}
